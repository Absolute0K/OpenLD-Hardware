@ ***********************************************************
@ My #11 program - Macro on Register Data Processing (RDP)  *
@ Made in 07/05/13, Update on 07/06			    *
@  - SDIO update on 02/16/2014				    *
@  - FPU update on 11/27/2014 NOTE THIS FILE IS DEPRECATED  *
@ Made by me :D						    *
@ MAKE SURE: R1 is availible and R2 = 1!! - No		    *
@ In case of BRR, R3 is the output	- No		    *
@ ***********************************************************

@ Busses
.EQU	APB1,			0x40000000
.EQU	APB2,			0x40010000
.EQU	AHB1,			0x40020000 
.EQU	CORE,			0xE000E000

@ Devices

.EQU	GPIOA,			0x0000
.EQU	GPIOB,			0x0400
.EQU	GPIOC,			0x0800
.EQU	GPIOD,			0x0C00
.EQU	GPIOE,			0x1000
.EQU	GPIOF,			0x1400
.EQU	GPIOG,			0x1800
.EQU	GPIOH,			0x1C00
.EQU	GPIOI,			0x2000

	.EQU	MODER,		0x00
	.EQU	OTYPER,		0x04
	.EQU	OSPEEDR,	0x08
	.EQU	PUPDR,		0x0C
	.EQU	IDR,		0x10
	.EQU	ODR,		0x14
	.EQU	BSRRL,		0x18
	.EQU	BSRRH,		0x1A
	.EQU	LCKR,	    	0x1C
	.EQU	AFRL,		0x20
	.EQU	AFRH,		0x24


.EQU	RCC,			0x3800

	.EQU	RCC_CR,	    	0x00
	.EQU	RCC_PLLCFGR,	0x04
	.EQU	RCC_CFGR,   	0x08
	.EQU	RCC_CIR,    	0x0C
	.EQU	RCC_AHB1ENR,	0x30
	.EQU	RCC_APB1ENR,	0x40
	.EQU	RCC_APB2ENR,	0x44


.EQU	FLASH,			0x3C00

	.EQU	FLASH_ACR,  	0x00


.EQU	DMA1,			0x6000
.EQU	DMA2,			0x6400

.EQU	TIM2,			0x0000
.EQU	TIM3,			0x0400
.EQU	TIM4,			0x0800
.EQU	TIM5,			0x0C00
.EQU	TIM6,			0x1000
.EQU	TIM7,			0x1400
.EQU	TIM12,			0x1800
.EQU	TIM13,			0x1C00
.EQU	TIM14,			0x2000
.EQU	RTC,			0x2800
.EQU	WWDG,			0x2C00
.EQU	IWDG,			0x3000
.EQU	I2S2ext,		0x3400
.EQU	SPI2,			0x3800
.EQU	SPI3,			0x3C00

	.EQU	SPI_CR1,	0x00
	.EQU	SPI_CR2,	0x04
	.EQU	SPI_SR,	    	0x08
	.EQU	SPI_DR,		0x0C
	.EQU	CRCPR,	    	0x10
	.EQU	RXCRCR,		0x14
	.EQU	TXCRCR,		0x18
	.EQU	I2SCFGR,    	0x1C
	.EQU	I2SPR,		0x20


.EQU	I2S3ext,		0x4000
.EQU	USART2,			0x4400
.EQU	USART3,			0x4800
.EQU	UART4,			0x4C00
.EQU	UART5,			0x5000
.EQU	I2C1,			0x5400
.EQU	I2C2,			0x5800
.EQU	I2C3,			0x5C00
.EQU	CAN1,			0x6400
.EQU	CAN2,			0x6800
.EQU	PWR,			0x7000

	.EQU	PWR_CR,		0x00


.EQU	DAC,			0x7400

.EQU	TIM1,			0x0000
.EQU	TIM8,			0x0400
.EQU	USART1,			0x1000

	.EQU	USART_SR,	0x00
	.EQU	USART_DR,	0x04
	.EQU	USART_BRR,  	0x08
	.EQU	USART_CR1,  	0x0C
	.EQU	USART_CR2,  	0x10
	.EQU	USART_CR3,  	0x14
	.EQU	USART_GTPR, 	0x18


.EQU	USART6,			0x1400
.EQU	ADC1,			0x2000
.EQU	ADC2,			0x2100
.EQU	ADC3,			0x2200
.EQU	ADC,			0x2300
.EQU	SDIO,			0x2C00

	.EQU	SDIO_POWER, 	0x00
	.EQU	SDIO_CLKCR, 	0x04
	.EQU	SDIO_ARG,   	0x08
	.EQU	SDIO_SMD,   	0x0C
	.EQU	SDIO_RESPCMD,	0x10
	.EQU	SDIO_RESP1, 	0x14
	.EQU	SDIO_RESP2, 	0x18
	.EQU	SDIO_RESP3, 	0x1C
	.EQU	SDIO_RESP4, 	0x20
	.EQU	SDIO_DLEN,  	0x28
	.EQU	SDIO_DCTRL, 	0x2C
	.EQU	SDIO_DCOUNT,	0x30
	.EQU	SDIO_STA,   	0x34
	.EQU	SDIO_ICR,   	0x38
	.EQU	SDIO_MASK,  	0x3C
	.EQU	SDIO_FIFO1, 	0x80
	.EQU	SDIO_FIFO2, 	0x84
	.EQU	SDIO_FIFO3, 	0x88
	.EQU	SDIO_FIFO4, 	0x8C
	.EQU	SDIO_FIFO5, 	0x90
	.EQU	SDIO_FIFO6, 	0x94
	.EQU	SDIO_FIFO7, 	0x98
	.EQU	SDIO_FIFO8, 	0x9C
	.EQU	SDIO_FIFO9, 	0xA0
	.EQU	SDIO_FIFO10,	0xA4
	.EQU	SDIO_FIFO11,	0xA8
	.EQU	SDIO_FIFO12,	0xAC
	.EQU	SDIO_FIFO13,	0xB0
	.EQU	SDIO_FIFO14,	0xB4
	.EQU	SDIO_FIFO15,	0xB8
	.EQU	SDIO_FIFO16,	0xBC
	.EQU	SDIO_FIFO17,	0xC0
	.EQU	SDIO_FIFO18,	0xC4
	.EQU	SDIO_FIFO19,	0xC8
	.EQU	SDIO_FIFO20,	0xCC
	.EQU	SDIO_FIFO21,	0xD0
	.EQU	SDIO_FIFO22,	0xD4
	.EQU	SDIO_FIFO23,	0xD8
	.EQU	SDIO_FIFO24,	0xDC
	.EQU	SDIO_FIFO25,	0xE0
	.EQU	SDIO_FIFO26,	0xE4
	.EQU	SDIO_FIFO27,	0xE8
	.EQU	SDIO_FIFO28,	0xEC
	.EQU	SDIO_FIFO29,	0xF0
	.EQU	SDIO_FIFO30,	0xF4
	.EQU	SDIO_FIFO31,	0xF8
	.EQU	SDIO_FIFO32,	0xFC

		


.EQU	SPI1,			0x3000
.EQU	SYSCFG,			0x3800

	.EQU	SYSCFG_EXTICR1,	0x08
	.EQU	SYSCFG_EXTICR2,	0x0C
	.EQU	SYSCFG_EXTICR3,	0x10
	.EQU	SYSCFG_EXTICR4,	0x14

.EQU	EXTI,			0x3C00
	
	.EQU	EXTI_IMR,   	0x00
	.EQU	EXTI_EMR,   	0x04
	.EQU	EXTI_RTSR,  	0x08
	.EQU	EXTI_FTSR,  	0x0C
	.EQU	EXTI_SWIER, 	0x10
	.EQU	EXTI_PR,    	0x14

.EQU	TIM9,			0x4000
.EQU	TIM10,			0x4400
.EQU	TIM11,			0x4800

.EQU	SCB,			0xD00	    @ System Control Block

	.EQU	SCB_ACTLR,  	0x08
	.EQU	SCB_CPUID,  	0x00
	.EQU	SCB_ICSR,   	0x04
	.EQU	SCB_VTOR,   	0x08
	.EQU	SCB_AIRCR,  	0x0C
	.EQU	SCB_SCR,    	0x10
	.EQU	SCB_CCR,    	0x14


.EQU	NVIC,			0x100
.EQU	PRILEVEL,		0x400
.EQU	FPU_CPACR,		0xE000ED88	    @ FPU Enable


@ DELAY
.MACRO	DELAY	CYCLES
	LDR		R0,	=\CYCLES
DELAY_\CYCLES:
	SUBS	R0,	R0,	#0x1
	BNE		DELAY_\CYCLES
.ENDM

@ ONLY Store (OSR) without bit banding

.MACRO	OSR		REG_IN,	BUS,	FUNC,	REG,	T
	LDR		R0,	=[\BUS + \FUNC]	
	STR\T	\REG_IN,	[R0,	#\REG]
.ENDM

.MACRO	OSRC	REG_IN,	REG,	T				@ Use this when BUS and FUNC is the same
	STR\T	\REG_IN,	[R0, #\REG]
.ENDM


@ Load, Manipulate, Store (LMS) without bit banding

.MACRO	LMS		REG_IN,	BUS,	FUNC,	REG,	T
	LDR		R0,	=[\BUS + \FUNC]	
	LDR\T	R1,	[R0,	#\REG]
	ORR		\REG_IN,	\REG_IN,	R1
	STR\T	\REG_IN,	[R0,	#\REG]
.ENDM

.MACRO	LMSC	REG_IN,	REG,	T				@ Use this when BUS and FUNC is the same
	LDR\T	R1,	[R0,	#\REG]
	ORR		\REG_IN,	\REG_IN,	R1
	STR\T	\REG_IN,	[R0, #\REG]
.ENDM


@ Load (LRV) without bit banding

.MACRO	LRV		REG_OUT,	BUS,	FUNC,	REG,	T
	LDR		R0,	=[\BUS + \FUNC]	
	LDR\T	\REG_OUT,	[R0,	#\REG]
.ENDM

.MACRO	LRVC	REG_OUT,	REG,	T			@ Use this when BUS and FUNC is the same
	LDR\T	\REG_OUT,	[R0,	#\REG]
.ENDM


@ Load and Store with Bit banding... UNSTABLE :(

@.MACRO	BSR		BUS,	REG,	BIT
@	ADD		R3,	\BUS,	\REG,	LSL	#5
@	STR		R2,	[R3, \BIT << 2]
@.ENDM

@.MACRO	BRR		BUS,	REG,	BIT
@	ADD		R3,	\BUS,	\REG,	LSL	#5
@	LDR		R3,	[R3, \BIT << 2]
@.ENDM
